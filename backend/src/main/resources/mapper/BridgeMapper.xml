<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.mapper.BridgeMapper">
    <insert id="insert" parameterType="java.util.Map">
        insert into bridge_info (
            bridge_no, type_no, route_no, bridge_name
        )
        values (
            #{bridge_no}, #{type_no},  #{route_no}, #{bridge_name}
        )
    </insert>
    <update id="update">
        update bridge_info set bridge_no=#{new_bridge_no},bridge_name=#{bridge_name},
                               type_no=#{type_no},route_no=#{route_no}
        where bridge_no=#{old_bridge_no}
    </update>

    <select id="selectById" resultType="com.backend.pojo.BridgeInfo" parameterType="java.util.Map">
        select * from bridge_info where bridge_no=#{bridge_no}
    </select>
    <select id="getAll" resultType="java.util.Map">
        select bridge_no, bridge_name, bridge_type.type_no, type_name,route.route_no, route_name,route_rank
        from bridge_info,bridge_type,route
        where bridge_type.type_no=bridge_info.type_no and
              bridge_info.route_no=route.route_no
    </select>

    <select id="getCountByUnit" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(bridge_no) bridgeCount from unit_job where unit_no=#{unit_no};
    </select>
    <select id="getBasicCardCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(bridge_no) basicCardCount from bridge_basic_cond
        where bridge_no in (
                select bridge_no from unit_job where unit_no=#{unit_no}
            )
    </select>
    <select id="getInitRecordCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(bridge_no) initRecordCount from bridge_init_record
        where bridge_no in (
            select bridge_no from unit_job where unit_no=#{unit_no}
        )
    </select>
    <select id="getPeriRecordCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(bridge_no) periRecordCount from bridge_peri_record
        where bridge_no in (
            select bridge_no from unit_job where unit_no=#{unit_no}
        )
    </select>
    <select id="getAllCount" parameterType="java.util.Map" resultType="java.util.Map">
        select count(bridge_no) bridgeCount from unit_job where unit_no=#{unit_no};
    </select>

</mapper>